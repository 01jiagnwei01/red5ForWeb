<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:lang="http://www.springframework.org/schema/lang"
    xmlns="http://www.springframework.org/schema/beans"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-2.5.xsd" >

    <!-- This context holds all the networking: mina -->
    <bean id="customEditorConfigurer" class="org.springframework.beans.factory.config.CustomEditorConfigurer">
		<property name="customEditors">
			<map>
				<entry key="java.net.SocketAddress" value="org.apache.mina.integration.beans.InetSocketAddressEditor" />
			</map>
		</property>
	</bean>	

	<bean id="placeholderConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:/build_war.properties" />
	</bean>
    <!-- RTMP Handler -->

    <bean
        id="rtmpHandler"
        class="org.red5.server.net.rtmp.RTMPHandler" >

        <property
            name="server"
            ref="red5.server" />

        <property
            name="statusObjectService"
            ref="statusObjectService" />
    </bean>

   

    <!-- RTMP Mina IO Handler -->
    <bean id="rtmpMinaIoHandler" class="org.red5.server.net.rtmp.RTMPMinaIoHandler">
		<property name="handler" ref="rtmpHandler" />
        <property name="codecFactory" ref="rtmpCodecFactory" />
	</bean>

     

    <!-- RTMP Mina Transport -->
	<bean id="rtmpTransport" class="org.red5.server.net.rtmp.RTMPMinaTransport" init-method="start" destroy-method="stop">
		<property name="ioHandler" ref="rtmpMinaIoHandler" />
        <property name="addresses">
            <list>
				<value>${rtmp.host}:${rtmp.port}</value>
                <!-- You can now add additional ports and ip addresses
				<value>${rtmp.host}:1936</value>
                 -->
            </list>
        </property>
		<property name="ioThreads" value="${rtmp.io_threads}" />
        <property name="sendBufferSize" value="${rtmp.send_buffer_size}" />
        <property name="receiveBufferSize" value="${rtmp.receive_buffer_size}" />		
        <property name="trafficClass" value="${rtmp.traffic_class}" />
        <property name="backlog" value="${rtmp.backlog}" />
        <property name="tcpNoDelay" value="${rtmp.tcp_nodelay}" />
		<property name="keepAlive" value="${rtmp.tcp_keepalive}" />
        <property name="thoughputCalcInterval" value="${rtmp.thoughput_calc_interval}" />
        <property name="enableDefaultAcceptor" value="${rtmp.default_acceptor}" />
        <!-- Pool settings are used when the default acceptor is disabled -->
        <property name="initialPoolSize" value="${rtmp.initial_pool_size}" />
        <property name="maxPoolSize" value="${rtmp.max_pool_size}" />
        <property name="maxProcessorPoolSize" value="${rtmp.max_processor_pool_size}" />
        <property name="executorKeepAliveTime" value="${rtmp.executor_keepalive_time}" />
		<!-- This is the interval at which the sessions are polled for stats. If mina monitoring is not enabled, polling will not occur. -->
		<property name="minaPollInterval" value="${jmx.mina.poll.interval}" />
		<property name="enableMinaMonitor" value="${jmx.mina.monitor.enable}" />
		<property name="enableMinaLogFilter" value="${mina.logfilter.enable}" />
	</bean>
	<!-- RTMP connection manager --> 
   <bean id="rtmpConnManager" class="org.red5.server.net.rtmp.RTMPConnManager" />
   <bean id="rtmpMinaConnManager"  class="org.red5.server.net.rtmp.RTMPConnManager" > </bean>
    <!-- RTMP Mina Connection -->

    <bean
        id="rtmpMinaConnection"
        class="org.red5.server.net.rtmp.RTMPMinaConnection"
        scope="prototype" >

        <!-- Ping clients every X ms. Set to 0 to disable ghost detection code. -->

        <property
            name="pingInterval"
            value="${rtmp.ping_interval}" />
        <!-- Disconnect client after X ms of not responding. -->

        <property
            name="maxInactivity"
            value="${rtmp.max_inactivity}" />
        <!-- Max. time in milliseconds to wait for a valid handshake. -->

        <property
            name="maxHandshakeTimeout"
            value="5000" />
    </bean>

    <bean
        id="rtmptConnManager"
        class="org.red5.server.net.rtmp.RTMPConnManager" >
    </bean>

    <!-- RTMPT Handler -->

    <bean
        id="rtmptHandler"
        autowire="byType"
        class="org.red5.server.net.rtmpt.RTMPTHandler" >

        <property
            name="codecFactory"
            ref="rtmptCodecFactory" />
    </bean>

     
    <!-- Use injection to store RTMPT handler in servlet -->
	<bean id="rtmptServlet"	class="org.red5.server.net.rtmpt.RTMPTServlet">
        <property name="manager" ref="rtmpConnManager" />
		<property name="handler" ref="rtmptHandler" />
		<!-- Increasing this value results in better stream performance, but also increases the latency -->
		<property name="targetResponseSize" value="${rtmpt.target_reponse_size}" />
		<!-- Response for /fcs/ident2 requests -->
		<!--
		<property name="ident2" value="127.0.0.1" />
		-->
	</bean>

    <!-- RTMPT Connection -->

    <bean
        id="rtmptConnection"
        class="org.red5.server.net.rtmpt.RTMPTConnection"
        scope="prototype" >

        <!-- Ping clients every X ms. Set to 0 to disable ghost detection code. -->

        <property
            name="pingInterval"
            value="${rtmp.ping_interval}" />
        <!-- Disconnect client after X ms of not responding. -->

        <property
            name="maxInactivity"
            value="${rtmp.max_inactivity}" />
        <!-- Max. time in milliseconds to wait for a valid handshake. -->

        <property
            name="maxHandshakeTimeout"
            value="5000" />
    </bean>

</beans>